version: "3.8"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - PORT=8001
      - SUPABASE_URL
      - SUPABASE_SERVICE_ROLE_KEY
      - INTERNAL_API_KEY
      - BREVO_API_KEY
      - FROM_EMAIL
      - FROM_NAME
      - ENODE_WEBHOOK_SECRET
      - ENODE_CLIENT_ID
      - ENODE_CLIENT_SECRET
    ports:
      - "9100:8000"   # <- publik host-port på noden
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/healthz || exit 1"]
      start_period: 30s
      interval: 10s
      timeout: 3s
      retries: 10

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_SUPABASE_URL: ${NEXT_PUBLIC_SUPABASE_URL}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${NEXT_PUBLIC_SUPABASE_ANON_KEY}
        NEXT_PUBLIC_API_BASE_URL: ${NEXT_PUBLIC_API_BASE_URL}
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    environment:
      NEXT_PUBLIC_SUPABASE_URL: ${NEXT_PUBLIC_SUPABASE_URL}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      NEXT_PUBLIC_API_BASE_URL: ${NEXT_PUBLIC_API_BASE_URL}
    ports:
      - "3010:3000"   # <- publik host-port på noden
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3000/ || exit 1"]
      start_period: 30s
      interval: 10s
      timeout: 3s
      retries: 5
